import csv                              ## CSV 파일 처리를 위한 모듈
import matplotlib.pyplot as plt         ## 데이터 시각화를 위한 모듈
import seaborn as sns

## 월별 기온 데이터 파일
temps_file_path = "ta_20241130204917.csv"        

avg_temps = []                          ## 평균 기온(왼쪽 y축 꺾은선 그래프)
years = list(range(1, 13))              ## 1부터 12까지의 숫자(1월~12월)

## CSV 파일을 읽기 위한 open 함수
with open(temps_file_path, mode='r') as file:
    reader = csv.reader(file)           ## CSV 파일의 내용을 읽어오는 reader 객체 생성

    ## 첫 8행은 헤더로 처리하여 건너뛰기
    for _ in range(8):  
        next(reader)  

    ## 파일의 각 행을 순회하며 데이터 처리
    for row in reader:
        ## 월별 기온 데이터 추출하기(2023년도)
        if row[0].startswith('23-'):    ## '23-'(2023년도)으로 시작하는 데이터 추출
            avg_temp = float(row[2])    ## 3열에서의 실수형태 데이터 변수 선언
            avg_temps.append(avg_temp)  ## 3열 데이터 추출

## 데이터 출력
for temp in avg_temps:
    print(temp)                    

## 데이터 시각화 그래프 설정
sns.set(rc={"figure.figsize":(12,6)})   ## 그래프 크기 설정: 가로 12, 세로 6인치
plt.rcParams['lines.linewidth'] = 4.0   ## 그래프 선 두께
sns.set_style("white")                  ## 그래프 배경 흰색


## 평균 기온을 점으로 표시하고, 선 색상과 레이블을 설정
plt.plot(years, avg_temps, marker='o', color='tab:red', label='Avg Temperature')

## x축 레이블 설정
plt.xlabel('Month (2023)')

## y축 레이블 설정
plt.ylabel('Average Temperature (°C)')

## 그래프 제목 설정
plt.title('Monthly Average Temperature in 2023')

## x축의 눈금 레이블을 설정하고, 5도 회전
plt.xticks(years, rotation=5)

## 범례 표시
plt.legend()

## 그래프의 레이아웃을 자동 조정(중첩 방지)
plt.tight_layout()

## 그래프 화면 출력
plt.show()
